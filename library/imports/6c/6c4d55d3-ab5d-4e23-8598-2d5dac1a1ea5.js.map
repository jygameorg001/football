{"version":3,"sources":["assets/Script/common/HttpHelper.ts"],"names":[],"mappings":";;;;;;;AAAA,+CAAwC;AAExC;IAAA;IAyGA,CAAC;IAtGU,sBAAW,GAAlB;IACA,CAAC;IAEM,cAAG,GAAV,UAAc,GAAW;QACrB,OAAO,IAAI,OAAO,CAAC,UAAC,MAAM,EAAE,MAAM;YAC9B,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;YAE/B,GAAG,CAAC,kBAAkB,GAAG;gBACrB,IAAI,GAAG,CAAC,UAAU,KAAK,cAAc,CAAC,IAAI,EAAE;oBACxC,IAAI,GAAG,CAAC,MAAM,KAAK,GAAG,EAAE;wBACpB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;wBACvC,MAAM,CAAC,GAAG,CAAC,CAAC;qBACf;yBAAM;wBACH,MAAM,CAAC,UAAQ,GAAG,SAAM,CAAC,CAAC;qBAC7B;iBACJ;YACL,CAAC,CAAC;YACF,GAAG,CAAC,OAAO,GAAG,UAAC,GAAG;gBACd,MAAM,CAAC,GAAG,CAAC,CAAC;YAChB,CAAC,CAAC;YAEF,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;YAE3B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;YACnB,GAAG,CAAC,IAAI,EAAE,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,kBAAO,GAAd,UAAe,GAAW,EAAE,QAA4B;QACpD,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,kBAAkB,GAAG;YACrB,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;gBACtB,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;oBACvC,IAAI,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC;oBAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC9B,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,GAAG,EAAE;iBACnB;qBAAM;oBACH,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,GAAG,EAAE;iBACnB;aACJ;iBAAM;gBACH,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,IAAI,EAAE;aACpB;QACL,CAAC,CAAC;QAEF,GAAG,CAAC,OAAO,GAAG,UAAU,KAAK;YACzB,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;gBAC/B,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,IAAI,EAAE;aACpB;QACL,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAE3B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QACnB,GAAG,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;IAEM,mBAAQ,GAAf,UAAgB,IAAI,EAAE,MAAM,EAAE,QAAQ;QAClC,IAAI,GAAG,GAAG,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC;QACpC,IAAI,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QAC/B,GAAG,CAAC,kBAAkB,GAAG;YACrB,IAAI,GAAG,CAAC,UAAU,KAAK,CAAC,EAAE;gBACtB,IAAI,GAAG,CAAC,MAAM,IAAI,GAAG,EAAE;oBACnB,IAAI,OAAO,GAAG,GAAG,CAAC,YAAY,CAAC;oBAC/B,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,EAAC,GAAG,CAAC,CAAC;iBACzC;qBAAM;oBACH,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,IAAI,EAAE,GAAG,CAAC,MAAM,EAAE;iBAChC;aACJ;QACL,CAAC,CAAC;QACF,GAAG,CAAC,OAAO,GAAG,UAAU,KAAK;YACzB,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;gBAC/B,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,IAAI,EAAE,KAAK,EAAE;gBACxB,uBAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;aACpC;QACL,CAAC,CAAC;QACF,GAAG,CAAC,SAAS,GAAG,UAAU,KAAK;YAC3B,IAAI,OAAO,QAAQ,IAAI,UAAU,EAAE;gBAC/B,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAG,IAAI,EAAE,SAAS,EAAE;gBAC5B,uBAAQ,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACtC;QACL,CAAC,CAAC;QAEF,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAC5B,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;QACnB,GAAG,CAAC,gBAAgB,CAAC,cAAc,EAAE,gCAAgC,CAAC,CAAC;QACvE,IAAG,UAAU,CAAC,KAAK,EAAC;YAChB,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;YACxD,GAAG,CAAC,gBAAgB,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;YAC5C,GAAG,CAAC,gBAAgB,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;YAChD,GAAG,CAAC,gBAAgB,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;YAClD,GAAG,CAAC,gBAAgB,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YACxC,GAAG,CAAC,gBAAgB,CAAC,eAAe,EAAG,UAAU,CAAC,CAAC;SACtD;QACD,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QACjC,IAAG,MAAM,EAAC;YACN,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACjB;aAAI;YACD,GAAG,CAAC,IAAI,EAAE,CAAC;SACd;IACL,CAAC;IAtGM,kBAAO,GAAG,gDAAgD,CAAC,CAAA,sBAAsB;IACjF,gBAAK,GAAG,EAAE,CAAC;IAuGtB,iBAAC;CAzGD,AAyGC,IAAA;AAzGY,gCAAU","file":"","sourceRoot":"/","sourcesContent":["import {EventMgr} from \"./EventManager\";\n\nexport class HttpHelper {\n    static BaseURL = \"https://test-youyin.daqiezi.cc/game/logic-api/\";// logic/getPlayerInfo\n    static token = \"\";\n    static initBaseUrl() {\n    }\n    \n    static get<T>(url: string): Promise<T> {\n        return new Promise((resole, reject) => {\n            let xhr = new XMLHttpRequest();\n\n            xhr.onreadystatechange = () => {\n                if (xhr.readyState === XMLHttpRequest.DONE) {\n                    if (xhr.status === 200) {\n                        let res = JSON.parse(xhr.responseText);\n                        resole(res);\n                    } else {\n                        reject(`get: ${url} err`);\n                    }\n                }\n            };\n            xhr.onerror = (err) => {\n                reject(err);\n            };\n\n            xhr.open(\"GET\", url, true);\n\n            xhr.timeout = 8000;\n            xhr.send();\n        });\n    }\n\n    static httpGet(url: string, callback: (res: any) => void) {\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status >= 200 && xhr.status < 400) {\n                    let respone = xhr.responseText;\n                    let rsp = JSON.parse(respone);\n                    callback?.(rsp);\n                } else {\n                    callback?.(xhr);\n                }\n            } else {\n                callback?.(null);\n            }\n        };\n\n        xhr.onerror = function (error) {\n            if (typeof callback == \"function\") {\n                callback?.(null);\n            }\n        };\n\n        xhr.open(\"GET\", url, true);\n\n        xhr.timeout = 8000;\n        xhr.send();\n    }\n\n    static HttpPost(path, params, callback) {\n        let url = HttpHelper.BaseURL + path;\n        let xhr = new XMLHttpRequest();\n        xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n                if (xhr.status == 200) {          \n                    let respone = xhr.responseText;\n                    let rsp = JSON.parse(respone);\n                    console.log(\"===POST rsp:\", path,rsp);\n                } else {\n                    callback?.(null, xhr.status);\n                }\n            }\n        };\n        xhr.onerror = function (error) {\n            if (typeof callback == \"function\") {\n                callback?.(null, error);\n                EventMgr.emit(\"HttpError\", path);\n            }\n        };\n        xhr.ontimeout = function (error) {\n            if (typeof callback == \"function\") {\n                callback?.(null, \"timeout\");\n                EventMgr.emit(\"HttpTimeOut\", path);\n            }\n        };\n\n        xhr.open(\"POST\", url, true);\n        xhr.timeout = 8000; \n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=Utf-8\");\n        if(HttpHelper.token){\n            xhr.setRequestHeader(\"Authorization\", HttpHelper.token);\n            xhr.setRequestHeader(\"appVersion\" ,\"0.0.0\");\n            xhr.setRequestHeader(\"deviceId\" ,\"test_123456\");\n            xhr.setRequestHeader(\"deviceName\" ,\"test_iPhone\");\n            xhr.setRequestHeader(\"deviceType\" ,\"1\");\n            xhr.setRequestHeader(\"systemVersion\" , \"605.1.15\");\n        }\n        let str = JSON.stringify(params);\n        if(params){\n            xhr.send(str);\n        }else{\n            xhr.send();\n        }\n    }\n\n}\n"]}